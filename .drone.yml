kind: pipeline
name: default-linux-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: build-pr
  image: rancher/dapper:v0.6.0
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    event:
    - pull_request

- name: build-push-tag
  image: rancher/dapper:v0.6.0
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push
    - tag

- name: fossa-amd64
  image: rancher/dapper:v0.6.0
  failure: ignore
  environment:
    FOSSA_API_KEY:
      from_secret: FOSSA_API_KEY
  commands:
    - dapper fossa
  volumes:
    - name: docker
      path: /var/run/docker.sock
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
      - push
      - tag

- name: stage-binaries
  image: rancher/dapper:v0.6.0
  commands:
  - "cp -r ./bin/* ./package/"
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push
    - tag

- name: docker-publish-head
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=amd64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-amd64
    password:
      from_secret: docker_password
    repo: rancher/rancher
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish-head-installer
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=amd64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
    - RANCHER_TAG=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-amd64
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.installer
    tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-amd64
    password:
      from_secret: docker_password
    repo: rancher/system-agent-installer-rancher
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish-head-agent
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=amd64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
    - RANCHER_TAG=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-amd64
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.agent
    tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-amd64
    password:
      from_secret: docker_password
    repo: rancher/rancher-agent
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=amd64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: docker_password
    repo: rancher/rancher
    tag: "${DRONE_TAG}-linux-amd64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: docker-publish-installer
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=amd64
    - "VERSION=${DRONE_TAG}"
    - "RANCHER_TAG=${DRONE_TAG}-linux-amd64"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.installer
    password:
      from_secret: docker_password
    repo: rancher/system-agent-installer-rancher
    tag: "${DRONE_TAG}-linux-amd64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: docker-publish-agent
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=amd64
    - "VERSION=${DRONE_TAG}"
    - "RANCHER_TAG=${DRONE_TAG}-linux-amd64"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.agent
    password:
      from_secret: docker_password
    repo: rancher/rancher-agent
    tag: "${DRONE_TAG}-linux-amd64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: github_binary_prerelease
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    files:
    - "bin/rancher-*"
    prerelease: true
    title: "Pre-release ${DRONE_TAG}"
    note: ./bin/rancher-components.txt
    overwrite: true
  when:
    event:
    - tag
    ref:
      include:
      - "refs/tags/*-*"

- name: github_binary_release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    files:
    - "bin/rancher-*"
  when:
    event:
    - tag
    ref:
      include:
      - "refs/tags/v2*"
      exclude:
      - "refs/tags/*-*"

- name: check-release-images-exists
  image: rancher/dapper:v0.6.0
  failure: ignore
  commands:
  - dapper check-release-images-exist
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/tags/v*"
    event:
    - tag

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
    exclude:
    - promote
---
kind: pipeline
name: default-linux-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: build-pr
  image: rancher/dapper:v0.6.0
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    event:
    - pull_request

- name: build-push-tag
  image: rancher/dapper:v0.6.0
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push
    - tag

- name: stage-binaries
  image: rancher/dapper:v0.6.0
  commands:
  - "cp -r ./bin/* ./package/"
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push
    - tag

- name: docker-publish-head
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=arm64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-arm64
    password:
      from_secret: docker_password
    repo: rancher/rancher
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish-head-installer
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=arm64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
    - RANCHER_TAG=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-arm64
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.installer
    tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-arm64
    password:
      from_secret: docker_password
    repo: rancher/system-agent-installer-rancher
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish-head-agent
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=arm64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
    - RANCHER_TAG=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-arm64
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.agent
    tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-arm64
    password:
      from_secret: docker_password
    repo: rancher/rancher-agent
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=arm64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: docker_password
    repo: rancher/rancher
    tag: "${DRONE_TAG}-linux-arm64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: docker-publish-installer
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=arm64
    - "VERSION=${DRONE_TAG}"
    - "RANCHER_TAG=${DRONE_TAG}-linux-arm64"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.installer
    password:
      from_secret: docker_password
    repo: rancher/system-agent-installer-rancher
    tag: "${DRONE_TAG}-linux-arm64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: docker-publish-agent
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=arm64
    - "VERSION=${DRONE_TAG}"
    - "RANCHER_TAG=${DRONE_TAG}-linux-arm64"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.agent
    password:
      from_secret: docker_password
    repo: rancher/rancher-agent
    tag: "${DRONE_TAG}-linux-arm64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
    exclude:
    - promote
